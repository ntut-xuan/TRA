services:
  tra-device1:
    build:
      context: .
      dockerfile: dockerfile.device
    tty: true
    networks:
      default:
        ipv4_address: 192.168.10.120
      lan01:
        ipv4_address: 192.168.20.103
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    command: >-
      sh -c "ip route del default &&
          ip route add default via 192.168.20.102 &&
          tail -f /dev/null"
  tra-device2:
    build:
      context: .
      dockerfile: dockerfile.device
    tty: true
    networks:
      default:
        ipv4_address: 192.168.10.130
      lan02:
        ipv4_address: 192.168.30.103
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    command: >-
      sh -c "ip route del default &&
          ip route add default via 192.168.30.102 &&
          tail -f /dev/null"
  tra-device3:
    build:
      context: .
      dockerfile: dockerfile.device
    tty: true
    networks:
      default:
        ipv4_address: 192.168.10.140
      lan03:
        ipv4_address: 192.168.40.103
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    command: >-
      sh -c "ip route del default &&
          ip route add default via 192.168.40.102 &&
          tail -f /dev/null"
  tra-device4:
    build:
      context: .
      dockerfile: dockerfile.device
    tty: true
    networks:
      default:
        ipv4_address: 192.168.10.150
      lan04:
        ipv4_address: 192.168.50.103
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    command: >-
      sh -c "ip route del default &&
          ip route add default via 192.168.50.102 &&
          tail -f /dev/null"
  tra-node1:
    build:
      context: .
      dockerfile: dockerfile.node
    tty: true
    environment:
      INPUT: "eth10"
      OUTPUT: "eth20"
      SELF_IP: "192.168.10.110"
      CONTROLLER_IP: "192.168.10.5"
    networks:
      default:
        ipv4_address: 192.168.10.110
      lan01:
        ipv4_address: 192.168.20.102
      lan02:
        ipv4_address: 192.168.30.102
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
  tra-node2:
    build:
      context: .
      dockerfile: dockerfile.node
    tty: true
    environment:
      INPUT: "eth30"
      OUTPUT: "eth40"
      SELF_IP: "192.168.10.111"
      CONTROLLER_IP: "192.168.10.5"
    networks:
      default:
        ipv4_address: 192.168.10.111
      lan03:
        ipv4_address: 192.168.40.102
      lan04:
        ipv4_address: 192.168.50.102
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
  tra-ctrl:
    build:
      context: .
      dockerfile: dockerfile.reporter
    environment:
      SELF_IP: "192.168.10.5"
    tty: true
    networks:
      default:
        ipv4_address: 192.168.10.5
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.gateway_mode_ipv4: "nat"
      com.docker.network.container_iface_prefix: "eth"
    ipam:
      config:
        - subnet: 192.168.10.0/24
  lan01:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
      com.docker.network.bridge.gateway_mode_ipv4: "routed"
      com.docker.network.container_iface_prefix: "eth1"
    ipam:
      config:
        - subnet: 192.168.20.0/24
  lan02:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
      com.docker.network.bridge.gateway_mode_ipv4: "routed"
      com.docker.network.container_iface_prefix: "eth2"
    ipam:
      config:
        - subnet: 192.168.30.0/24
  lan03:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
      com.docker.network.bridge.gateway_mode_ipv4: "routed"
      com.docker.network.container_iface_prefix: "eth3"
    ipam:
      config:
        - subnet: 192.168.40.0/24
  lan04:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
      com.docker.network.bridge.gateway_mode_ipv4: "routed"
      com.docker.network.container_iface_prefix: "eth4"
    ipam:
      config:
        - subnet: 192.168.50.0/24
